function exampleTimer()
%{
    Example of how to trigger the pulse generator channels from MATLAB.
    By pressing 'start' button, Ch1 of the pulse generator starts sending
    synchronization pulses that are to be sent to multiple devices.
    Ch2 is used to trigger stimulation devices e.g. laser, LED, stimulus
    isolator.

    Ch1 is expected to be 'togglePulse' mode.
    Ch2 is expected to be 'pulse' mode of desired
    stimulation pattern.
    Dagher & Ishiyama (2023)
%}

%% User settings
    expDur = 60; % total duration of recording
    stimOffset = 10; % time to start stimulation
    interval = 10; % interval of stimulation onset


%% Fixed settings
    a = connectArduino;
    if isempty(a)
        error('Arduino is not connected')
    end
    syncPulsePin = 'D2'; % Ch1 of the pulse generator
    stimPin = 'D3'; % Ch2 of the pulse generator
    stimTextDisplayTime = 1;

%% Make GUI
    delete(findobj('Tag', 'exampleTimer'))
    fig = figure('Tag', 'exampleTimer' ...
                ,'MenuBar', 'none' ...
                ,'ToolBar', 'none' ...
                ,'Position', [620, 620, 400, 200] ...
                ,'DockControls', 'off' ...
                ,'NumberTitle', 'off' ...
                ,'Resize', 'off' ...
                ,'CloseRequestFcn', @closeCB ...
                );
    startB = uicontrol('Style', 'pushbutton'...
                ,'String', 'Start' ...
                ,'Parent', fig ...
                ,'FontSize', 11 ...
                ,'Units', 'normalized' ...
                ,'Position', [0.2, 0.1, 0.3, 0.25] ...
                ,'Callback', @startCB ...
                );
    resetB = uicontrol('Style', 'pushbutton'...
                ,'String', 'Reset' ...
                ,'Parent', fig ...
                ,'FontSize', 11 ...
                ,'Units', 'normalized' ...
                ,'Position', [0.5, 0.1, 0.3, 0.25] ...
                ,'Callback', @resetCB ...
                );
    elapsed = uicontrol('Style', 'text' ...
                ,'Parent', fig ...
                ,'FontSize', 28 ...
                ,'Units', 'normalized' ...
                ,'HorizontalAlignment', 'center' ...
                ,'String', '00:00.0'...
                ,'Position', [0.21, 0.5, 0.5, 0.2] ...
                );
    stimText = uicontrol('Style', 'text' ...
                ,'Parent', fig ...
                ,'FontSize', 28 ...
                ,'Units', 'normalized' ...
                ,'HorizontalAlignment', 'center' ...
                ,'String', 'STIM'...
                ,'Visible', 'off' ...
                ,'Position', [0.21, 0.7, 0.5, 0.2] ...
                ,'ForegroundColor', [1, 0, 0] ...
                );
%% Functions
    t = timer('TimerFcn', @updateTime, 'Period', 0.1, 'ExecutionMode', 'FixedRate', 'TasksToExecute', expDur * 10);
    function startCB(varargin)
        if strcmp(startB.String, 'Start') || strcmp(startB.String, 'Resume')
            startB.String = 'Pause';
            start(t)
            trgPulse(a, syncPulsePin) % start sync pulse
            return
        end
        startB.String = 'Resume';
        stop(t)
    end

    function resetCB(varargin)
        stop(t)
        t.UserData = [];
        elapsed.String = '00:00.0';
        startB.String = 'Start';
    end

    function updateTime(varargin)
        if isempty(t.UserData)
            t.UserData = 0;
        else
            t.UserData = t.UserData + 1;
        end
        if t.UserData >= expDur * 10
            stop(t)
            startB.String = 'Start';
        end
        elapsed.String = sprintf('%02d:%04.1f', floor(t.UserData / 600), mod(t.UserData, 600) / 10);
        
        % STIM
        stimTimes = (stimOffset * 10):(interval * 10):(expDur * 10);
        stimDisplayTicks = stimTextDisplayTime / t.Period;
        if ismember(t.UserData, stimTimes)
            stimText.Visible = 'on';
            trgPulse(a, stimPin) % Trigger stimulation
        elseif ismember(t.UserData - stimDisplayTicks, stimTimes)
            stimText.Visible = 'off';
        end
    end

    function closeCB(varargin)
        stop(t)
        trgPulse(a, syncPulsePin)
        delete(t)
        delete(gcf)
    end

end